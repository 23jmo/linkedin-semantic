---
description: 
globs: 
alwaysApply: false
---
# Type Definitions

This rule describes the central file for defining data structures and types used throughout the frontend application.

## Primary File

The main type definitions are located in [`frontend/src/types/types.ts`](mdc:frontend/src/types/types.ts).

## Purpose

This file uses `zod` to define schemas for:

*   Validating API request bodies (e.g., [`SearchQuerySchema`](mdc:frontend/src/types/types.ts)).
*   Validating data structures retrieved from the database or external APIs (e.g., [`RawProfileDataSchema`](mdc:frontend/src/types/types.ts), [`SearchAndRankResultSchema`](mdc:frontend/src/types/types.ts)).
*   Defining the shape of data used within frontend components (e.g., [`ProfileFrontendSchema`](mdc:frontend/src/types/types.ts)).

TypeScript types are inferred from these Zod schemas (e.g., `type ProfileFrontend = z.infer<typeof ProfileFrontendSchema>;`).

## Related Files

*   [`frontend/src/types/linkedin-profile.types.ts`](mdc:frontend/src/types/linkedin-profile.types.ts): Contains types automatically generated by Supabase based on the database schema. The API route (`route.ts`) uses `SearchProfilesByEmbeddingResult` from this file.
